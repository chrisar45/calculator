{"version":3,"sources":["components/Button/index.jsx","App.jsx","components/Functions.jsx","components/MathOperations.jsx","components/Numbers.jsx","components/Result.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onContentClear","clear","onDelete","newStack","substring","onPercent","console","log","onClickNumber","number","onClickOperation","operation","onClickEqual","equal","eval","toString","Functions","MathOperations","numbers","Numbers","map","symbol","key","renderButtons","Result","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"yGAAA,0BAiBeA,IAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACX,4BAAQC,UAAWH,EAAMI,QAAS,kBAAKF,EAAaD,KAChD,8BAAOA,M,yjCCGTI,IAAM,SAANA,MAAa,IAAD,UACcC,oDAAS,IADvB,mNACNC,MADM,cACCC,SADD,cAERC,MAAQC,oDAAMH,MAAO,gBACrBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,IACzD,OACI,mEAAMT,UAAU,oBACZ,2DAAC,kDAAD,CAAQQ,MAAOA,QACf,2DAAC,qDAAD,CACIE,eAAgB,SAAAC,GAAK,OAAIN,SAAS,KAClCO,SAAU,WACN,GAAGR,MAAMK,OAAS,EAAE,CAChB,IAAMI,EAAWT,MAAMU,UAAU,EAAGV,MAAMK,OAAQ,GAClDJ,SAASQ,KAGjBE,UAAW,WACJX,MAAMK,OAAS,GACdO,QAAQC,IAAI,8CAIxB,2DAAC,mDAAD,CAASC,cAAe,SAAAC,GAAM,OAAId,SAAS,GAAD,OAAID,OAAJ,OAAYe,OACtD,2DAAC,0DAAD,CACIC,iBAAkB,SAAAC,GAAS,OAAIhB,SAAS,GAAD,OAAID,OAAJ,OAAYiB,KACnDC,aAAc,sBAAAC,OAAK,OAAIlB,SAASmB,KAAKpB,MAAMqB,kBAM5CvB,2B,8BCxCf,2BAkBewB,IAdG,SAAC,GAAD,IAAGhB,EAAH,EAAGA,eAAgBE,EAAnB,EAAmBA,SAAUG,EAA7B,EAA6BA,UAA7B,OACd,6BAASf,UAAU,aACf,kBAAC,IAAD,CAAQH,KAAM,mBAAoBC,KAAM,KAAMC,aAAcW,IAC5D,kBAAC,IAAD,CAAQb,KAAM,mBAAoBC,KAAM,IAAKC,aAAca,IAC3D,kBAAC,IAAD,CAAQf,KAAM,mBAAoBC,KAAM,IAAKC,aAAcgB,O,6BCRnE,2BAmBeY,IAfQ,SAAC,GAAD,IAAGP,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,aAArB,OACnB,6BAAStB,UAAU,mBACf,kBAAC,IAAD,CAAQF,KAAM,IAAKC,aAAcqB,IACjC,kBAAC,IAAD,CAAQtB,KAAM,IAAKC,aAAcqB,IACjC,kBAAC,IAAD,CAAQtB,KAAM,IAAKC,aAAcqB,IACjC,kBAAC,IAAD,CAAQtB,KAAM,IAAKC,aAAcqB,IACjC,kBAAC,IAAD,CAAQtB,KAAM,IAAKC,aAAcuB,O,6BCVzC,2BAIMM,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAgBpDC,IAVC,SAAC,GAAD,IAAGX,EAAH,EAAGA,cAAH,OACZ,6BAASlB,UAAU,WALD,SAAAkB,GAClB,OAAOU,EAAQE,KAAI,SAAAC,GAAM,OAAI,kBAAC,IAAD,CAAQC,IAAKD,EAAQjC,KAAMiC,EAAQhC,aAAcmB,OAKzEe,CAAcf,M,6BCZvB,oBAGMgB,EAAS,SAAC,GAAD,IAAG1B,EAAH,EAAGA,MAAH,OACX,yBAAKR,UAAU,UACX,8BAAOQ,KAQf0B,EAAOC,aAAc,CACjB3B,MAAO,KAGI0B,O,+DCjBf,kDAIAE,IAASC,OAAO,kBAAC,IAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fab46ebb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Button.css'\n\nconst Button = ({ type, text, clickHandler }) => (\n    <button className={type} onClick={()=> clickHandler(text)}>\n        <span>{text}</span>\n    </button>\n)\n\nButton.propTypes = {\n    type: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    clickHandler: PropTypes.func.isRequired\n}\n\nexport default Button","/* eslint no-eval: 0 */\nimport React, { useState } from 'react'\nimport words from 'lodash.words'\nimport Functions from './components/Functions'\nimport MathOperations from './components/MathOperations'\nimport Numbers from './components/Numbers'\nimport Result from './components/Result'\n\nimport './App.css'\n\nconst App = () => {\n    const [ stack, setStack ] = useState(\"\")\n    const items = words(stack, /[^-^+^*^/]+/g)\n    const value = items.length > 0 ? items[items.length-1] : \"0\"\n    return (\n        <main className=\"react-calculator\">\n            <Result value={value}/>\n            <Functions \n                onContentClear={clear => setStack(\"\")} \n                onDelete={() => {\n                    if(stack.length > 0){\n                        const newStack = stack.substring(0, stack.length -1 )\n                        setStack(newStack)\n                    }\n                }}\n                onPercent={() => {\n                    if(stack.length > 1) {\n                        console.log(\"No me saliÃ³ como hacer el porcentaje\")\n                    }\n                }}\n            />\n            <Numbers onClickNumber={number => setStack(`${stack}${number}`)} />\n            <MathOperations \n                onClickOperation={operation => setStack(`${stack}${operation}`)}\n                onClickEqual={equal => setStack(eval(stack.toString()))}\n            />\n        </main>\n    )\n}\n\nexport default App","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Functions = ({ onContentClear, onDelete, onPercent}) => (\n    <section className=\"functions\">\n        <Button type={\"button-long-text\"} text={\"AC\"} clickHandler={onContentClear}/>\n        <Button type={\"button-long-text\"} text={\"C\"} clickHandler={onDelete}/>\n        <Button type={\"button-long-text\"} text={\"%\"} clickHandler={onPercent}/>\n    </section>\n)\n\nFunctions.propTypes = {\n    onContentClear: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onPercent: PropTypes.func.isRequired\n}\n\nexport default Functions","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst MathOperations = ({ onClickOperation, onClickEqual }) => (\n    <section className=\"math-operations\">\n        <Button text={\"/\"} clickHandler={onClickOperation} />\n        <Button text={\"*\"} clickHandler={onClickOperation} />\n        <Button text={\"-\"} clickHandler={onClickOperation} />\n        <Button text={\"+\"} clickHandler={onClickOperation} />\n        <Button text={\"=\"} clickHandler={onClickEqual} />\n    </section>\n)\n\nMathOperations.propTypes = {\n    onClickOperation: PropTypes.func.isRequired, \n    onClickEqual: PropTypes.func.isRequired\n}\n\nexport default MathOperations","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \",\"]\n\nconst renderButtons = onClickNumber => {\n    return numbers.map(symbol => <Button key={symbol} text={symbol} clickHandler={onClickNumber} />)\n}\n\nconst Numbers = ({ onClickNumber }) => (\n    <section className=\"numbers\">\n        {renderButtons(onClickNumber)}\n    </section>\n)\n\nNumbers.propTypes = {\n    onClickNumber: PropTypes.func.isRequired\n}\n\nexport default Numbers","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Result = ({ value }) => (\n    <div className=\"result\">\n        <span>{value}</span>\n    </div>\n)\n\nResult.propTypes = {\n    value: PropTypes.string.isRequired\n}\n\nResult.defaultProps= {\n    value: \"0\"\n}\n\nexport default Result","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}